# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 0.9.2.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - appveyor

  # blacklist
  except:
    - dotNetCore

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# build cache to preserve files/folders between builds
cache:
  - packages -> **\packages.config  # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified

# enable service required for build/tests
services:
  - mysql               # start MySQL 5.6 service
  - mssql2017

# enable patching of AssemblyInfo.* files
#assembly_info:
#  patch: true
#  file: AssemblyInfo.*
#  assembly_version: "2.2.{build}"
#  assembly_file_version: "{version}"
#  assembly_informational_version: "{version}"


install:
 - appveyor DownloadFile https://dist.nuget.org/win-x86-commandline/latest/nuget.exe


# scripts to run before build
before_build:
  - nuget restore -DisableParallelProcessing


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: QDMS.sln               # path to Visual Studio solution or project
  verbosity: minimal

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:
- ps: "[reflection.assembly]::LoadWithPartialName(\"Microsoft.SqlServer.Smo\") | Out-Null\n[reflection.assembly]::LoadWithPartialName(\"Microsoft.SqlServer.SqlWmiManagement\") | Out-Null\n \n$instanceName = 'SQL2017'\n$computerName = $env:COMPUTERNAME\n$smo = 'Microsoft.SqlServer.Management.Smo.'\n$wmi = New-Object ($smo + 'Wmi.ManagedComputer')\n\n# Enable named pipes\n$uri = \"ManagedComputer[@Name='$computerName']/ ServerInstance[@Name='$instanceName']/ServerProtocol[@Name='Np']\"\n$Np = $wmi.GetSmoObject($uri)\n$Np.IsEnabled = $true\n$Np.Alter()\n\n# Start services\nSet-Service SQLBrowser -StartupType Manual\nStart-Service SQLBrowser\nRestart-Service \"MSSQL`$$instanceName\""
      
# to run your custom scripts instead of automatic MSBuild
build_script:

# to disable automatic builds
#build: off


#---------------------------------#
#         notifications           #
#---------------------------------#

#notifications:

  # Email
#  - provider: Email
#    to:
#      - user1@email.com
#      - user2@email.com
#    subject: 'Build {{status}}'                  # optional
#    message: "{{message}}, {{commitId}}, ..."    # optional
#    on_build_status_changed: true

  # Slack
#  - provider: Slack
#    incoming_webhook: http://incoming-webhook-url

  # ...or using auth token

#  - provider: Slack
#    auth_token:
#      secure: kBl9BlxvRMr9liHmnBs14A==
#    channel: development
#    template: "{message}, {commitId}, ..."
