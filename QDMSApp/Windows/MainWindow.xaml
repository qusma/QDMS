<controls:MetroWindow
    xmlns:filterLibrary="clr-namespace:DataGridFilterLibrary;assembly=DataGridFilterLibrary"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:QDMSApp"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:qdms="clr-namespace:QDMS;assembly=QDMS"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    x:Class="QDMSApp.MainWindow"
        Title="QDMS Server" Height="764" Width="1680"
    BorderBrush="Black"
    BorderThickness="1"
    Icon="..\Resources\appbar.box.layered.png"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    Dialog:DialogParticipation.Register="{Binding}"
               Closing="DXWindow_Closing" >
    <controls:MetroWindow.Resources>
        <local:LogItemToColorConverter x:Key="LogColorConverter" />
        <local:LogEventInfoToStringConverter x:Key="LogInfoToStringConverter" />

        <Style TargetType="DataGridColumnHeader" x:Key="FilterStyle" BasedOn="{StaticResource {ComponentResourceKey 
		                       TypeInTargetAssembly={x:Type filterLibrary:DataGridHeaderFilterControl}, 
		                       ResourceId=DataGridHeaderFilterControlStyle}}">
            <Setter Property="Padding" Value="5,4,4,5" />
        </Style>

        <MenuItem x:Key="NewTagMenuItem" >
            <MenuItem.Header>
                <StackPanel Orientation="Horizontal">
                    <Label Content="New Tag: " Margin="0" />
                    <TextBox Name="NewTagTextBox" Width="100" KeyDown="NewTagTextBox_KeyDown" />
                </StackPanel>
            </MenuItem.Header>
        </MenuItem>

        <MenuItem Header="Get New Data" x:Key="UpdateFreqSubMenu"/>

        <MenuItem Header="Tags" x:Key="InstrumentTagMenu" SubmenuOpened="InstrumentTagMenu_OnSubmenuOpened"/>

        <MenuItem Header="Set Session Template" x:Key="InstrumentSetSessionMenu" />

        <ContextMenu x:Key="RowMenu" DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}">
            <MenuItem Header="Data Request..." Name="NewDataRequestBtn" Click="NewDataRequestBtn_OnClick"/>
            <StaticResource ResourceKey="UpdateFreqSubMenu" />
            <Separator />

            <StaticResource ResourceKey="InstrumentTagMenu" />
            <StaticResource ResourceKey="InstrumentSetSessionMenu" />

            <MenuItem Header="Clone" Name="InstrumentContextCloneBtn"
                      CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Command="{Binding Path=DataContext.CloneInstrument, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            <MenuItem Header="Import Data" Name="ImportDataBtn" Click="ImportDataBtn_ItemClick"/>
            <MenuItem Header="Edit Data" Name="EditDataBtn" Click="EditDataBtn_ItemClick"/>
            <MenuItem Header="Clear Data" Name="ClearDataBtn" Click="ClearDataBtn_ItemClick"/>
            <MenuItem Header="Delete" Name="DeleteInstrumentBtn" 
                      CommandParameter="{Binding Path=SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Command="{Binding Path=DataContext.DeleteInstrument, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        </ContextMenu>

        <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
            <Setter Property="ContextMenu" Value="{StaticResource RowMenu}" />
            <EventSetter Event="MouseDoubleClick" Handler="TableView_RowDoubleClick"/>
            <Setter Property="MinHeight" Value="20"/>
            <EventSetter Event="ContextMenuOpening" Handler="ContextMenu_ContextMenuOpening"/>
        </Style>




        <ObjectDataProvider x:Key="InstrumentTypes" MethodName="GetValues" ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="qdms:InstrumentType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </controls:MetroWindow.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Menu Background="WhiteSmoke">
            <MenuItem Header="_File">
                <MenuItem Header="_Exit" x:Name="BtnExit" Click="BtnExit_ItemClick"/>
                <Separator/>
                <MenuItem Header="Backup" x:Name="BackupMenuItem">
                    <MenuItem Header="Metadata" x:Name="BackupMetadataBtn" Click="BackupMetadataBtn_Click" />
                    <MenuItem Header="Data" x:Name="BackupDataBtn" Click="BackupDataBtn_Click" />
                </MenuItem>
                <MenuItem Header="Restore" x:Name="RestoreMenuItem">
                    <MenuItem Header="Metadata" x:Name="RestoreMetadataBtn" Click="RestoreMetadataBtn_OnClick" IsEnabled="False"/>
                    <MenuItem Header="Data" x:Name="RestoreDataBtn" Click="RestoreDataBtn_OnClick" IsEnabled="False"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="Add Instrument">
                    <MenuItem Header="Manual" x:Name="AddInstrumentManuallyBtn" Command="{Binding AddInstrumentManually}"/>
                    <Separator/>
                    <MenuItem Header="Interactive Brokers" x:Name="AddInstrumentIBBtn" Click="AddInstrumentIBBtn_ItemClick"/>
                    <MenuItem Header="Quandl" x:Name="AddInstrumentQuandlBtn" Click="AddInstrumentQuandlBtn_OnClick"/>
                    <MenuItem Header="FRED" x:Name="AddInstrumentFredBtn" Click="AddInstrumentFredBtn_OnClick"/>
                    <MenuItem Header="Binance" x:Name="AddInstrumentBinanceBtn" Click="AddInstrumentBinanceBtn_OnClick"/>
                    <Separator/>
                    <MenuItem Header="Continuous Futures" x:Name="BtnAddCustomFutures" Click="BtnAddCustomFutures_ItemClick"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Exchanges" x:Name="ExchangesBtn" Click="ExchangesBtn_OnItemClick"/>
                <Separator/>
                <MenuItem Header="Session Templates" x:Name="SessionTemplateBtn" Click="SessionTemplateBtn_OnItemClick"/>
                <Separator/>
                <MenuItem Header="Root Symbols" x:Name="RootSymbolsBtn" Click="RootSymbolsBtn_OnClick"/>
                <Separator/>
                <MenuItem Header="Scheduled Jobs" x:Name="DataJobsBtn" Click="DataJobsBtn_OnClick"/>
                <Separator/>
                <MenuItem Header="Tags" x:Name="TagsBtn" Click="TagsBtn_OnClick"/>
                <Separator/>
                <MenuItem Header="Settings" x:Name="BtnSettings" Click="BtnSettings_OnItemClick" />
            </MenuItem>

            <MenuItem Header="_Help">
                <MenuItem Header="About" x:Name="AboutBtn" Click="AboutBtn_Click" />
                <MenuItem Header="Check for Updates" x:Name="UpdateBtn" Click="UpdateBtn_Click" IsEnabled="False" />
            </MenuItem>
        </Menu>


        <TabControl SelectedIndex="0" Grid.Row="1">
            <TabItem Header="Instruments">
                <Grid Background="Transparent">
                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Instruments}" RowStyle="{StaticResource DataGridRowStyle}"
                              Name="InstrumentsGrid" IsReadOnly="True" Margin="10,0,10,0"
                              filterLibrary:DataGridExtensions.UseBackgroundWorkerForFiltering="True"
                              ColumnHeaderStyle="{StaticResource FilterStyle}"
                              >


                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="ColID" Binding="{Binding Path=ID}" Header="ID" Width="40"  filterLibrary:DataGridColumnExtensions.DoNotGenerateFilterControl="True"  />
                            <DataGridTextColumn x:Name="ColSymbol" Binding="{Binding Path=Symbol}" Header="Symbol" Width="75"/>
                            <DataGridTextColumn x:Name="ColName" Binding="{Binding Path=Name}" Header="Name" Width="auto"/>
                            <DataGridTextColumn x:Name="ColUnderlying" Binding="{Binding Path=UnderlyingSymbol}" Header="Underlying" Width="70"/>
                            <DataGridComboBoxColumn x:Name="ColType" 
                                                    filterLibrary:DataGridColumnExtensions.FilterMemberPathProperty="Type"  
                                                    ItemsSource="{Binding Source={StaticResource InstrumentTypes}}"
                                                    SelectedItemBinding="{Binding Path=Type}" Header="Type" Width="60" />
                            <DataGridTextColumn x:Name="ColExpiration" Binding="{Binding Path=Expiration,StringFormat={}{0:dd/MM/yyyy}}" Header="Expiration" Width="100"/>
                            <DataGridTextColumn x:Name="ColMinTick" Binding="{Binding Path=MinTick, StringFormat={}{0:0.###########}}" Header="Min. Tick" Width="60"/>
                            <DataGridTextColumn x:Name="ColMult" Binding="{Binding Path=Multiplier}" Header="Multiplier" Width="60"/>
                            <DataGridTextColumn x:Name="ColOptType" Binding="{Binding Path=OptionType}" Header="Opt Type" Width="50"/>
                            <DataGridTextColumn x:Name="ColStrike" Binding="{Binding Path=Strike, StringFormat={}{0:0.###########}}"  Header="Strike" Width="60"/>
                            <DataGridTextColumn x:Name="ColCurrency" Binding="{Binding Path=Currency}" Header="Currency" Width="60"/>
                            <DataGridTextColumn x:Name="ColDatasource" Binding="{Binding Path=Datasource.Name}" Header="Datasource" Width="80"/>
                            <DataGridTextColumn x:Name="ColIndustry" Binding="{Binding Path=Industry}" Header="Industry" Width="60"/>
                            <DataGridTextColumn x:Name="ColCategory" Binding="{Binding Path=Category}" Header="Category" Width="60"/>
                            <DataGridTextColumn x:Name="ColSubcategory" Binding="{Binding Path=Subcategory}" Header="Subcategory" Width="60"/>
                            <DataGridTextColumn x:Name="ColExchange" Binding="{Binding Path=Exchange.Name}" Header="Exchange" Width="60"/>
                            <DataGridTextColumn x:Name="ColPrimaryExchange" Binding="{Binding Path=PrimaryExchange.Name}" Header="Prim. Exch." Width="60"/>

                            <DataGridTemplateColumn Width="40" Header="Cont Fut." filterLibrary:DataGridColumnExtensions.DoNotGenerateFilterControl="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Style="{StaticResource DataGridCheckBoxStyle}" IsChecked="{Binding Path=IsContinuousFuture}" IsEnabled="False" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn x:Name="ColTags" Binding="{Binding Path=TagsAsString}" Header="Tags" Width="150"
                                                filterLibrary:DataGridColumnExtensions.ContainsSearchProperty="True" />
                            <DataGridTextColumn x:Name="ColValidExchanges" Binding="{Binding Path=ValidExchanges}" Header="Valid Exch." Width="60"/>

                        </DataGrid.Columns>

                    </DataGrid>



                </Grid>
                <!--</dxb:BarManager>-->
            </TabItem>
            <TabItem Header="Server">
                <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="300*"/>
                        <RowDefinition Height="300*"/>
                    </Grid.RowDefinitions>

                    <DataGrid IsReadOnly="True" x:Name="ActiveStreamGrid" 
                              ItemsSource="{Binding RealTimeBroker.ActiveStreams}"
                              AutoGenerateColumns="False" Margin="10"  Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Req. ID" Binding="{Binding Path=RequestID}" />
                            <DataGridTextColumn Header="Symbol" Binding="{Binding Path=Instrument.Symbol}" />
                            <DataGridTextColumn Header="Source" Binding="{Binding Path=Datasource}" />
                            <DataGridTextColumn Header="Frequency" Binding="{Binding Path=Frequency}" />
                            <DataGridTextColumn Header="RTH Only" Binding="{Binding Path=RTHOnly}" />
                        </DataGrid.Columns>
                    </DataGrid>

                    <DataGrid Name="HistoricalRequestGrid"
                        Grid.Column="1" Grid.Row="1" Margin="10" AutoGenerateColumns="False" ItemsSource="{Binding HistoricalBroker.PendingRequests}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Req. ID" Binding="{Binding Path=RequestID}" />
                            <DataGridTextColumn Header="Symbol" Binding="{Binding Path=Instrument.Symbol}" />
                            <DataGridTextColumn Header="Source" Binding="{Binding Path=Datasource}" />
                            <DataGridTextColumn Header="Frequency" Binding="{Binding Path=Frequency}" />
                            <DataGridTextColumn Header="RTH Only" Binding="{Binding Path=RTHOnly}" />
                            <DataGridTextColumn Header="From" Binding="{Binding Path=StartingDate}" />
                            <DataGridTextColumn Header="To" Binding="{Binding Path=EndingDate}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    
                    <Label Grid.Row="0" Grid.Column="0" Content="Active Real Time Data Streams:" HorizontalAlignment="Left" Margin="10,8,0,0" VerticalAlignment="Top" Width="208"/>
                    <Label Grid.Row="0" Grid.Column="1" Content="Active Historical Data Requests:" HorizontalAlignment="Left" Margin="10,8,0,0" VerticalAlignment="Top" Width="208"/>

                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30*"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="Data Source Status" FontSize="15"/>
                        <Label Grid.Row="1" Grid.Column="0" Content="Historical"/>
                        <Label Grid.Row="1" Grid.Column="1" Content="Real Time" Margin="5,0,0,0"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="Dividends" Margin="5,0,0,0"/>
                        <Label Grid.Row="1" Grid.Column="3" Content="Earnings" Margin="5,0,0,0"/>
                        <Label Grid.Row="1" Grid.Column="4" Content="Economic Releases" Margin="5,0,0,0"/>

                        <DataGrid Grid.Row="2" Grid.Column="0" AutoGenerateColumns="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding HistoricalBroker.DataSources}" x:Name="HistoricalDataSourceStatusGrid" RowHeight="18" Margin="0,0,5,0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Key}" />
                                <DataGridTemplateColumn Header="Status">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="ConnectedImage" Source="..\Resources\109_AllAnnotations_Default_16x16_72.png" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Path=Value.Connected}" Value="False">
                                                    <Setter Property="Source" Value="..\Resources\109_AllAnnotations_Error_16x16_72.png" TargetName="ConnectedImage"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <DataGrid Grid.Row="2" Grid.Column="1" AutoGenerateColumns="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding RealTimeBroker.DataSources}" x:Name="RealTimeDataSourceStatusGrid" RowHeight="18" Margin="5,0,5,0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Key}" />
                                <DataGridTemplateColumn Header="Status">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="ConnectedImage" Source="..\Resources\109_AllAnnotations_Default_16x16_72.png" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Path=Value.Connected}" Value="False">
                                                    <Setter Property="Source" Value="..\Resources\109_AllAnnotations_Error_16x16_72.png" TargetName="ConnectedImage"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    

                    <DataGrid Grid.Row="2" Grid.Column="2" AutoGenerateColumns="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding DividendBroker.DataSources}" x:Name="DividendDataSourceStatusGrid" RowHeight="18" Margin="5,0,5,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Path=Key}" />
                            <DataGridTemplateColumn Header="Status">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Image x:Name="ConnectedImage" Source="..\Resources\109_AllAnnotations_Default_16x16_72.png" />
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=Value.Connected}" Value="False">
                                                <Setter Property="Source" Value="..\Resources\109_AllAnnotations_Error_16x16_72.png" TargetName="ConnectedImage"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                        <DataGrid Grid.Row="2" Grid.Column="3" AutoGenerateColumns="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding EarningsAnnouncementBroker.DataSources}" x:Name="EarningsDataSourceStatusGrid" RowHeight="18" Margin="5,0,5,0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Key}" />
                                <DataGridTemplateColumn Header="Status">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="ConnectedImage" Source="..\Resources\109_AllAnnotations_Default_16x16_72.png" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Path=Value.Connected}" Value="False">
                                                    <Setter Property="Source" Value="..\Resources\109_AllAnnotations_Error_16x16_72.png" TargetName="ConnectedImage"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>

                        <DataGrid Grid.Row="2" Grid.Column="4" AutoGenerateColumns="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                  ItemsSource="{Binding EconomicReleaseBroker.DataSources}" x:Name="EconomicReleaseDataSourceStatusGrid" RowHeight="18" Margin="5,0,5,0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Key}" />
                                <DataGridTemplateColumn Header="Status">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image x:Name="ConnectedImage" Source="..\Resources\109_AllAnnotations_Default_16x16_72.png" />
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Path=Value.Connected}" Value="False">
                                                    <Setter Property="Source" Value="..\Resources\109_AllAnnotations_Error_16x16_72.png" TargetName="ConnectedImage"/>
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Log">
                <Grid Background="Transparent">
                    <ListBox x:Name="RequestListBox" ItemsSource="{Binding LogMessages}"  local:ListBoxExt.AutoScroll="True">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource LogInfoToStringConverter}}" Foreground="{Binding Converter={StaticResource LogColorConverter}}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                </Grid>
            </TabItem>
        </TabControl>
        <Separator Grid.Row="2" VerticalAlignment="Top" />
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="500"/>
                <ColumnDefinition Width="400*"/>
            </Grid.ColumnDefinitions>

            <Label Margin="10,3,0,0" Content="Ready" Name="StatusBarLabel" Grid.ColumnSpan="3"/>
            <Label Margin="500,3,0,0" Width="250" Content="{Binding ClientStatus}" Grid.ColumnSpan="2" Grid.Column="0" />

            <controls:MetroProgressBar Name="PBar" HorizontalAlignment="Right" Width="164" Height="10" Value="0" Maximum="0" Loaded="PBar_Loaded" Margin="0,10,10,10" Grid.Column="1">
                <ProgressBar.Style>
                    <Style BasedOn="{StaticResource MetroProgressBar}" TargetType="ProgressBar">
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                    </Style>
                </ProgressBar.Style>
            </controls:MetroProgressBar>
        </Grid>


    </Grid>
</controls:MetroWindow>
